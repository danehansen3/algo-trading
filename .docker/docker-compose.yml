version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: premarket-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d/
    ports:
      - "${POSTGRES_PORT}:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trading-network

  premarket-scanner:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: premarket-scanner
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres  # This stays as 'postgres' since it's the service name
      POSTGRES_PORT: 5434      # This stays as 5434 since it's the internal port
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
      LOG_LEVEL: ${LOG_LEVEL}
      PYTHONPATH: /app
    volumes:
      - ../logs:/app/logs
    restart: unless-stopped
    networks:
      - trading-network

volumes:
  postgres_data:

networks:
  trading-network:
    driver: bridge